{"ast":null,"code":"var _jsxFileName = \"/home/addo/Desktop/react_on_rails/src/containers/BooksList.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Book from '../components/Book';\nimport { removeBook, changeFilter, getBooks } from '../actions/index';\nimport Header from '../components/Header';\nimport axios from 'axios';\n\nclass BooksList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.test = async () => {\n      const response = await axios.get('https://bookstore-apis.herokuapp.com//api/v1/books');\n      const data = response.data.book;\n      console.log(data);\n    };\n\n    this.handleRemoveBook = this.handleRemoveBook.bind(this);\n    this.handleFilterChange = this.handleFilterChange.bind(this);\n  }\n\n  handleRemoveBook(id) {\n    const removeBook = this.props.removeBook;\n    removeBook(id);\n  }\n\n  handleFilterChange(filter) {\n    const changeFilter = this.props.changeFilter;\n    changeFilter(filter);\n  }\n\n  componentDidMount() {\n    const _this$props = this.props,\n          getBooks = _this$props.getBooks,\n          boo = _this$props.boo;\n    getBooks();\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          books = _this$props2.books,\n          filter = _this$props2.filter;\n    this.test();\n    console.log(books);\n    const visible = books.filter(book => book.category === filter || filter === 'All');\n    return React.createElement(\"div\", {\n      className: \"container BooksList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"mx-auto col-9 shadow-lg mt-3 \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"p-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Header, {\n      onFilterChange: this.handleFilterChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    })), visible.map(book => React.createElement(Book, {\n      clickDelete: this.handleRemoveBook,\n      key: book.id,\n      book: book,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"clearfix\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  books: state.books,\n  filter: state.filter\n});\n\nconst mapDispatchToProps = dispatch => ({\n  removeBook: id => dispatch(removeBook(id)),\n  changeFilter: filter => dispatch(changeFilter(filter)),\n  getBooks: () => dispatch(getBooks())\n});\n\nBooksList.propTypes = {\n  books: PropTypes.array.isRequired,\n  filter: PropTypes.string.isRequired,\n  removeBook: PropTypes.func.isRequired,\n  changeFilter: PropTypes.func.isRequired\n};\nBooksList.defaultProps = {\n  books: [{}]\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(BooksList);","map":{"version":3,"sources":["/home/addo/Desktop/react_on_rails/src/containers/BooksList.js"],"names":["React","Component","connect","PropTypes","Book","removeBook","changeFilter","getBooks","Header","axios","BooksList","constructor","props","test","response","get","data","book","console","log","handleRemoveBook","bind","handleFilterChange","id","filter","componentDidMount","boo","render","books","visible","category","map","mapStateToProps","state","mapDispatchToProps","dispatch","propTypes","array","isRequired","string","func","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Book from '../components/Book';\nimport { removeBook, changeFilter, getBooks } from '../actions/index';\nimport Header from '../components/Header';\nimport axios from 'axios'\n\n\nclass BooksList extends Component {\n  constructor(props) {\n    super(props)\n    this.handleRemoveBook = this.handleRemoveBook.bind(this);\n    this.handleFilterChange = this.handleFilterChange.bind(this);\n  }\n\n  handleRemoveBook(id) {\n    const { removeBook } = this.props\n    removeBook(id);\n  };\n\n  handleFilterChange(filter) {\n    const { changeFilter } = this.props\n    changeFilter(filter);\n  };\n\n  componentDidMount() {\n    const { getBooks, boo } = this.props\n    getBooks()\n  }\n  test = async() => {\n    const response = await axios.get('https://bookstore-apis.herokuapp.com//api/v1/books');\n    const data = response.data.book;\n    console.log(data)\n  }\n \n  render () {\n    const { books, filter } = this.props\n    this.test()\n    console.log(books)\n    const visible = books.filter(book => book.category === filter || filter === 'All')\n\n    return (\n      <div className=\"container BooksList\">\n        <div className=\"mx-auto col-9 shadow-lg mt-3 \">\n          <div className=\"p-3\">\n            <Header onFilterChange={this.handleFilterChange} />\n          </div>\n          {\n            visible.map(book => <Book clickDelete={this.handleRemoveBook} key={book.id} book={book} />)\n          }\n          <div className=\"clearfix\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  books: state.books,\n  filter: state.filter\n\n});\nconst mapDispatchToProps = dispatch => ({\n  removeBook: id => dispatch(removeBook(id)),\n  changeFilter: filter => dispatch(changeFilter(filter)),\n  getBooks: () => dispatch(getBooks()),\n});\nBooksList.propTypes = {\n  books: PropTypes.array.isRequired,\n  filter: PropTypes.string.isRequired,\n  removeBook: PropTypes.func.isRequired,\n  changeFilter: PropTypes.func.isRequired,\n};\nBooksList.defaultProps = {\n  books: [{}],\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(BooksList);\n"]},"metadata":{},"sourceType":"module"}