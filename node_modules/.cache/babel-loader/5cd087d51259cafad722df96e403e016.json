{"ast":null,"code":"import _slicedToArray from \"/home/addo/Desktop/react_on_rails/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/addo/Desktop/react_on_rails/src/containers/BooksForm.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createBook } from '../actions/index';\nimport axios from 'axios';\n\nclass BooksForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.bookCategory = ['Action', 'Biography', 'History', 'Horror', 'Kids', 'Learning', 'Sci-Fi'];\n    this.titleInput = React.createRef();\n    this.categoryInput = React.createRef();\n\n    const _this$bookCategory = _slicedToArray(this.bookCategory, 1),\n          categoryOne = _this$bookCategory[0];\n\n    this.state = [{\n      title: '',\n      category: categoryOne,\n      titleError: ''\n    }];\n    this.handleTitleChange = this.handleTitleChange.bind(this);\n    this.handleCategoryChange = this.handleCategoryChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleTitleChange() {\n    this.setState({\n      title: this.titleInput.current.value\n    });\n  }\n\n  handleCategoryChange() {\n    this.setState({\n      category: this.categoryInput.current.value\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const _this$state = this.state,\n          title = _this$state.title,\n          category = _this$state.category;\n\n    if (!/\\S/.test(title)) {\n      this.setState({\n        titleError: 'Title must not contain only whitespaces'\n      });\n      return;\n    } // axios.get('https://bookstore-apis.herokuapp.com//api/v1/books')\n    //   .then(response => { console.log(response) })\n    //   .catch(error => { console.log(error) })\n    //   .then(() => { console.log(\"hello data\") })\n\n\n    const createBook = this.props.createBook;\n    createBook({\n      title,\n      category\n    });\n    this.setState({\n      title: '',\n      category: 'Action',\n      titleError: ''\n    });\n  }\n\n  async componentDidMount(prevState) {\n    try {\n      const response = await axios.get('https://bookstore-apis.herokuapp.com//api/v1/books');\n      const data = response.data.book;\n      this.setState(state => ({\n        state: data\n      })).then(data => {});\n      console.log(data);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          title = _this$state2.title,\n          titleError = _this$state2.titleError,\n          category = _this$state2.category;\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Line col-9\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col-9 mx-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"form-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"ADD NEW BOOK\"), React.createElement(\"form\", {\n      className: \"form d-flex\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group title mr-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, titleError), React.createElement(\"input\", {\n      ref: this.titleInput,\n      type: \"text\",\n      placeholder: \"Title\",\n      className: \"form-control\",\n      name: \"title\",\n      id: \"title\",\n      onChange: this.handleTitleChange,\n      value: title,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group category mr-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      ref: this.categoryInput,\n      placeholder: \"category\",\n      className: \"form-control\",\n      onChange: this.handleCategoryChange,\n      value: category,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, this.bookCategory.map(val => React.createElement(\"option\", {\n      key: val,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, val)))), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn mainColor submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"submit\"))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  createBook: book => {\n    dispatch(createBook(book));\n  }\n});\n\nBooksForm.propTypes = {\n  createBook: PropTypes.func.isRequired\n};\nexport default connect(null, mapDispatchToProps)(BooksForm);","map":{"version":3,"sources":["/home/addo/Desktop/react_on_rails/src/containers/BooksForm.js"],"names":["React","PropTypes","connect","createBook","axios","BooksForm","Component","constructor","props","bookCategory","titleInput","createRef","categoryInput","categoryOne","state","title","category","titleError","handleTitleChange","bind","handleCategoryChange","handleSubmit","setState","current","value","event","preventDefault","test","componentDidMount","prevState","response","get","data","book","then","console","log","error","render","map","val","mapDispatchToProps","dispatch","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createBook } from '../actions/index';\nimport axios from 'axios';\nclass BooksForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.bookCategory = ['Action', 'Biography', 'History', 'Horror', 'Kids', 'Learning', 'Sci-Fi'];\n\n    this.titleInput = React.createRef();\n    this.categoryInput = React.createRef();\n    const [categoryOne] = this.bookCategory;\n    this.state = [{\n      title: '',\n      category: categoryOne,\n      titleError: '',\n    }];\n    this.handleTitleChange = this.handleTitleChange.bind(this);\n    this.handleCategoryChange = this.handleCategoryChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleTitleChange() {\n    this.setState({\n      title: this.titleInput.current.value,\n    });\n  }\n\n  handleCategoryChange() {\n    this.setState({\n      category: this.categoryInput.current.value,\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const { title, category } = this.state;\n    if (!/\\S/.test(title)) {\n      this.setState({ titleError: 'Title must not contain only whitespaces' });\n      return;\n    }\n   \n    // axios.get('https://bookstore-apis.herokuapp.com//api/v1/books')\n    //   .then(response => { console.log(response) })\n    //   .catch(error => { console.log(error) })\n    //   .then(() => { console.log(\"hello data\") })\n    const { createBook } = this.props;\n    createBook({ title, category });\n    this.setState({\n      title: '',\n      category: 'Action',\n      titleError: '',\n    });\n  }\n  async componentDidMount(prevState) {\n    try {\n      const response = await axios.get('https://bookstore-apis.herokuapp.com//api/v1/books')\n      const data = response.data.book\n      this.setState((state)=>({\n        state: data\n      })).then((data)=>{})\n\n      console.log(data)\n    } catch(error){\n      console.log(error)\n    }\n  }\n  render() {\n    const { title, titleError, category } = this.state;\n    return (\n      <div className=\"container\">\n        <div className=\"Line col-9\" />\n        <div className=\"col-9 mx-auto\">\n          <h3 className=\"form-title\">ADD NEW BOOK</h3>\n          <form className=\"form d-flex\" onSubmit={this.handleSubmit}>\n            <div className=\"form-group title mr-4\">\n              <span>{titleError}</span>\n              <input ref={this.titleInput} type=\"text\" placeholder=\"Title\" className=\"form-control\" name=\"title\" id=\"title\" onChange={this.handleTitleChange} value={title} required />\n            </div>\n            <div className=\"form-group category mr-4\">\n              <select ref={this.categoryInput} placeholder=\"category\" className=\"form-control\" onChange={this.handleCategoryChange} value={category}>\n                {this.bookCategory.map(val => <option key={val}>{val}</option>)}\n              </select>\n            </div>\n            <button type=\"submit\" className=\"btn mainColor submit\">submit</button>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  createBook: (book) => {\n    dispatch(createBook(book));\n  },\n});\n\nBooksForm.propTypes = {\n  createBook: PropTypes.func.isRequired,\n};\n\nexport default connect(null, mapDispatchToProps)(BooksForm);\n"]},"metadata":{},"sourceType":"module"}