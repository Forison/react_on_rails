{"ast":null,"code":"import _slicedToArray from \"/home/addo/Desktop/Bookstore/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/addo/Desktop/Bookstore/src/containers/BooksForm.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createBook } from '../actions/index';\n\nclass BooksForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.bookCategory = ['Action', 'Biography', 'History', 'Horror', 'Kids', 'Learning', 'Sci-Fi'];\n    this.titleInput = React.createRef();\n    this.categoryInput = React.createRef();\n\n    const _this$bookCategory = _slicedToArray(this.bookCategory, 1),\n          categoryOne = _this$bookCategory[0];\n\n    this.state = {\n      title: '',\n      category: categoryOne,\n      titleError: ''\n    };\n    this.handleTitleChange = this.handleTitleChange.bind(this);\n    this.handleCategoryChange = this.handleCategoryChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleTitleChange() {\n    this.setState({\n      title: this.titleInput.current.value\n    });\n  }\n\n  handleCategoryChange() {\n    this.setState({\n      category: this.categoryInput.current.value\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const _this$state = this.state,\n          title = _this$state.title,\n          category = _this$state.category;\n\n    if (!/\\S/.test(title)) {\n      this.setState({\n        titleError: 'Title must not contain only whitespaces'\n      });\n      return;\n    }\n\n    const createBook = this.props.createBook;\n    createBook({\n      title,\n      category\n    });\n    this.setState({\n      title: '',\n      category: 'Action',\n      titleError: ''\n    });\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          title = _this$state2.title,\n          titleError = _this$state2.titleError,\n          category = _this$state2.category;\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-5 mx-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"form\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Title:\", React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, titleError), React.createElement(\"input\", {\n      ref: this.titleInput,\n      type: \"text\",\n      className: \"form-control\",\n      name: \"title\",\n      id: \"title\",\n      onChange: this.handleTitleChange,\n      value: title,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"category\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Category\", React.createElement(\"select\", {\n      ref: this.categoryInput,\n      className: \"form-control\",\n      onChange: this.handleCategoryChange,\n      value: category,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, this.bookCategory.map(val => React.createElement(\"option\", {\n      key: val,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, val))))), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"submit\"))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  createBook: book => {\n    dispatch(createBook(book));\n  }\n});\n\nBooksForm.propTypes = {\n  createBook: PropTypes.func.isRequired\n};\nexport default connect(null, mapDispatchToProps)(BooksForm);","map":{"version":3,"sources":["/home/addo/Desktop/Bookstore/src/containers/BooksForm.js"],"names":["React","PropTypes","connect","createBook","BooksForm","Component","constructor","props","bookCategory","titleInput","createRef","categoryInput","categoryOne","state","title","category","titleError","handleTitleChange","bind","handleCategoryChange","handleSubmit","setState","current","value","event","preventDefault","test","render","map","val","mapDispatchToProps","dispatch","book","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createBook } from '../actions/index';\n\nclass BooksForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.bookCategory = ['Action', 'Biography', 'History', 'Horror', 'Kids', 'Learning', 'Sci-Fi'];\n\n    this.titleInput = React.createRef();\n    this.categoryInput = React.createRef();\n    const [categoryOne] = this.bookCategory;\n    this.state = {\n      title: '',\n      category: categoryOne,\n      titleError: '',\n    };\n    this.handleTitleChange = this.handleTitleChange.bind(this);\n    this.handleCategoryChange = this.handleCategoryChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleTitleChange() {\n    this.setState({\n      title: this.titleInput.current.value,\n    });\n  }\n\n  handleCategoryChange() {\n    this.setState({\n      category: this.categoryInput.current.value,\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const { title, category } = this.state;\n    if (!/\\S/.test(title)) {\n      this.setState({ titleError: 'Title must not contain only whitespaces' });\n      return;\n    }\n    const { createBook } = this.props;\n    createBook({ title, category });\n    this.setState({\n      title: '',\n      category: 'Action',\n      titleError: '',\n    });\n  }\n\n  render() {\n    const { title, titleError, category } = this.state;\n    return (\n      <div className=\"container\">\n        <div className=\"col-5 mx-auto\">\n          <form className=\"form\" onSubmit={this.handleSubmit}>\n            <div className=\"form-group\">\n              <label htmlFor=\"title\">\n                Title:\n                <span>{titleError}</span>\n                <input ref={this.titleInput} type=\"text\" className=\"form-control\" name=\"title\" id=\"title\" onChange={this.handleTitleChange} value={title} required />\n              </label>\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"category\">\n                Category\n                <select ref={this.categoryInput} className=\"form-control\" onChange={this.handleCategoryChange} value={category}>\n                  {this.bookCategory.map(val => <option key={val}>{val}</option>)}\n                </select>\n              </label>\n            </div>\n            <button type=\"submit\" className=\"btn btn-secondary\">submit</button>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  createBook: (book) => {\n    dispatch(createBook(book));\n  },\n});\n\nBooksForm.propTypes = {\n  createBook: PropTypes.func.isRequired,\n};\n\nexport default connect(null, mapDispatchToProps)(BooksForm);\n"]},"metadata":{},"sourceType":"module"}