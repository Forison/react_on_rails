{"ast":null,"code":"var _jsxFileName = \"/home/addo/Desktop/react_on_rails/src/containers/BooksList.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Book from '../components/Book';\nimport { removeBook, changeFilter } from '../actions/index';\nimport Header from '../components/Header';\n\nfunction BooksList({\n  books,\n  filter,\n  removeBook,\n  changeFilter,\n  loadedBook\n}) {\n  compo;\n\n  const handleRemoveBook = id => {\n    removeBook(id);\n  };\n\n  const handleFilterChange = filter => {\n    changeFilter(filter);\n  };\n\n  const getVisibleBooks = (books, filter) => books.filter(book => book.category === filter || filter === 'All');\n\n  const visible = getVisibleBooks(books, filter);\n  return React.createElement(\"div\", {\n    className: \"container BooksList\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"mx-auto col-9 shadow-lg mt-3 \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"p-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(Header, {\n    onFilterChange: handleFilterChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  })), visible.map(book => React.createElement(Book, {\n    clickDelete: handleRemoveBook,\n    key: book.id,\n    book: book,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"clearfix\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  })));\n}\n\nconst mapStateToProps = state => ({\n  books: state.books,\n  filter: state.filter\n});\n\nconst mapDispatchToProps = dispatch => ({\n  removeBook: id => dispatch(removeBook(id)),\n  changeFilter: filter => dispatch(changeFilter(filter)),\n  loadedBook: () => dispatch(getBooks())\n});\n\nBooksList.propTypes = {\n  books: PropTypes.array.isRequired,\n  filter: PropTypes.string.isRequired,\n  removeBook: PropTypes.func.isRequired,\n  changeFilter: PropTypes.func.isRequired,\n  loadedBook: PropTypes.func.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(BooksList);","map":{"version":3,"sources":["/home/addo/Desktop/react_on_rails/src/containers/BooksList.js"],"names":["React","connect","PropTypes","Book","removeBook","changeFilter","Header","BooksList","books","filter","loadedBook","compo","handleRemoveBook","id","handleFilterChange","getVisibleBooks","book","category","visible","map","mapStateToProps","state","mapDispatchToProps","dispatch","getBooks","propTypes","array","isRequired","string","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,UAAT,EAAqBC,YAArB,QAAyC,kBAAzC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAEA,SAASC,SAAT,CAAmB;AAAEC,EAAAA,KAAF;AAASC,EAAAA,MAAT;AAAiBL,EAAAA,UAAjB;AAA6BC,EAAAA,YAA7B;AAA2CK,EAAAA;AAA3C,CAAnB,EAA4E;AAC1EC,EAAAA,KAAK;;AACL,QAAMC,gBAAgB,GAAIC,EAAD,IAAQ;AAC/BT,IAAAA,UAAU,CAACS,EAAD,CAAV;AACD,GAFD;;AAGA,QAAMC,kBAAkB,GAAIL,MAAD,IAAY;AACrCJ,IAAAA,YAAY,CAACI,MAAD,CAAZ;AACD,GAFD;;AAGA,QAAMM,eAAe,GAAG,CAACP,KAAD,EAAQC,MAAR,KAAmBD,KAAK,CAACC,MAAN,CAAaO,IAAI,IAAIA,IAAI,CAACC,QAAL,KAAkBR,MAAlB,IAA4BA,MAAM,KAAK,KAA5D,CAA3C;;AAEA,QAAMS,OAAO,GAAGH,eAAe,CAACP,KAAD,EAAQC,MAAR,CAA/B;AACA,SACE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,cAAc,EAAEK,kBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAKII,OAAO,CAACC,GAAR,CAAYH,IAAI,IAAI,oBAAC,IAAD;AAAM,IAAA,WAAW,EAAEJ,gBAAnB;AAAqC,IAAA,GAAG,EAAEI,IAAI,CAACH,EAA/C;AAAmD,IAAA,IAAI,EAAEG,IAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAApB,CALJ,EAOE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF,CADF;AAcD;;AAED,MAAMI,eAAe,GAAGC,KAAK,KAAK;AAChCb,EAAAA,KAAK,EAAEa,KAAK,CAACb,KADmB;AAEhCC,EAAAA,MAAM,EAAEY,KAAK,CAACZ;AAFkB,CAAL,CAA7B;;AAIA,MAAMa,kBAAkB,GAAGC,QAAQ,KAAK;AACtCnB,EAAAA,UAAU,EAAES,EAAE,IAAIU,QAAQ,CAACnB,UAAU,CAACS,EAAD,CAAX,CADY;AAEtCR,EAAAA,YAAY,EAAEI,MAAM,IAAIc,QAAQ,CAAClB,YAAY,CAACI,MAAD,CAAb,CAFM;AAGtCC,EAAAA,UAAU,EAAE,MAAKa,QAAQ,CAACC,QAAQ,EAAT;AAHa,CAAL,CAAnC;;AAKAjB,SAAS,CAACkB,SAAV,GAAsB;AACpBjB,EAAAA,KAAK,EAAEN,SAAS,CAACwB,KAAV,CAAgBC,UADH;AAEpBlB,EAAAA,MAAM,EAAEP,SAAS,CAAC0B,MAAV,CAAiBD,UAFL;AAGpBvB,EAAAA,UAAU,EAAEF,SAAS,CAAC2B,IAAV,CAAeF,UAHP;AAIpBtB,EAAAA,YAAY,EAAEH,SAAS,CAAC2B,IAAV,CAAeF,UAJT;AAKpBjB,EAAAA,UAAU,EAAER,SAAS,CAAC2B,IAAV,CAAeF;AALP,CAAtB;AAQA,eAAe1B,OAAO,CAACmB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6Cf,SAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Book from '../components/Book';\nimport { removeBook, changeFilter } from '../actions/index';\nimport Header from '../components/Header';\n\nfunction BooksList({ books, filter, removeBook, changeFilter, loadedBook }) {\n  compo\n  const handleRemoveBook = (id) => {\n    removeBook(id);\n  };\n  const handleFilterChange = (filter) => {\n    changeFilter(filter);\n  };\n  const getVisibleBooks = (books, filter) => books.filter(book => book.category === filter || filter === 'All');\n\n  const visible = getVisibleBooks(books, filter);\n  return (\n    <div className=\"container BooksList\">\n      <div className=\"mx-auto col-9 shadow-lg mt-3 \">\n        <div className=\"p-3\">\n          <Header onFilterChange={handleFilterChange} />\n        </div>\n        {\n          visible.map(book => <Book clickDelete={handleRemoveBook} key={book.id} book={book} />)\n        }\n        <div className=\"clearfix\" />\n      </div>\n\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  books: state.books,\n  filter: state.filter,\n});\nconst mapDispatchToProps = dispatch => ({\n  removeBook: id => dispatch(removeBook(id)),\n  changeFilter: filter => dispatch(changeFilter(filter)),\n  loadedBook: ()=> dispatch(getBooks())\n});\nBooksList.propTypes = {\n  books: PropTypes.array.isRequired,\n  filter: PropTypes.string.isRequired,\n  removeBook: PropTypes.func.isRequired,\n  changeFilter: PropTypes.func.isRequired,\n  loadedBook: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BooksList);\n"]},"metadata":{},"sourceType":"module"}