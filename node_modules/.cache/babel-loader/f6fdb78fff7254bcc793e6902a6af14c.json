{"ast":null,"code":"var _jsxFileName = \"/home/addo/Desktop/react_on_rails/src/containers/BooksList.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Book from '../components/Book';\nimport { removeBook, changeFilter } from '../actions/index';\nimport Header from '../components/Header';\n\nclass BooksList extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  handleRemoveBook(id) {\n    removeBook(id);\n  }\n\n  handleFilterChange(filter) {\n    changeFilter(filter);\n  }\n\n  getVisibleBooks(books, filter) {\n    books.filter(book => book.category === filter || filter === 'All');\n  }\n\n  visible() {\n    this.getVisibleBooks(this.props.books, this.props.filter);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container BooksList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"mx-auto col-9 shadow-lg mt-3 \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"p-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(Header, {\n      onFilterChange: this.props.handleFilterChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    })), this.propsvisible.map(book => React.createElement(Book, {\n      clickDelete: this.props.handleRemoveBook,\n      key: book.id,\n      book: book,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"clearfix\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  books: state.books,\n  filter: state.filter\n});\n\nconst mapDispatchToProps = dispatch => ({\n  removeBook: id => dispatch(removeBook(id)),\n  changeFilter: filter => dispatch(changeFilter(filter))\n});\n\nBooksList.propTypes = {\n  books: PropTypes.array.isRequired,\n  filter: PropTypes.string.isRequired,\n  removeBook: PropTypes.func.isRequired,\n  changeFilter: PropTypes.func.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(BooksList);","map":{"version":3,"sources":["/home/addo/Desktop/react_on_rails/src/containers/BooksList.js"],"names":["React","Component","connect","PropTypes","Book","removeBook","changeFilter","Header","BooksList","constructor","props","handleRemoveBook","id","handleFilterChange","filter","getVisibleBooks","books","book","category","visible","render","propsvisible","map","mapStateToProps","state","mapDispatchToProps","dispatch","propTypes","array","isRequired","string","func"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,UAAT,EAAqBC,YAArB,QAAyC,kBAAzC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAIA,MAAMC,SAAN,SAAwBP,SAAxB,CAAkC;AAChCQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAED;;AACDC,EAAAA,gBAAgB,CAAEC,EAAF,EAAK;AACnBP,IAAAA,UAAU,CAACO,EAAD,CAAV;AACD;;AACDC,EAAAA,kBAAkB,CAACC,MAAD,EAAQ;AACxBR,IAAAA,YAAY,CAACQ,MAAD,CAAZ;AACD;;AACDC,EAAAA,eAAe,CAACC,KAAD,EAAQF,MAAR,EAAgB;AAC7BE,IAAAA,KAAK,CAACF,MAAN,CAAaG,IAAI,IAAIA,IAAI,CAACC,QAAL,KAAkBJ,MAAlB,IAA4BA,MAAM,KAAK,KAA5D;AACD;;AAEDK,EAAAA,OAAO,GAAG;AACR,SAAKJ,eAAL,CAAqB,KAAKL,KAAL,CAAWM,KAAhC,EAAuC,KAAKN,KAAL,CAAWI,MAAlD;AACD;;AAEDM,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,cAAc,EAAE,KAAKV,KAAL,CAAWG,kBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAKI,KAAKQ,YAAL,CAAkBC,GAAlB,CAAsBL,IAAI,IAAI,oBAAC,IAAD;AAAM,MAAA,WAAW,EAAE,KAAKP,KAAL,CAAWC,gBAA9B;AAAgD,MAAA,GAAG,EAAEM,IAAI,CAACL,EAA1D;AAA8D,MAAA,IAAI,EAAEK,IAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA9B,CALJ,EAOE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,CADF,CADF;AAcD;;AAlC+B;;AAqClC,MAAMM,eAAe,GAAGC,KAAK,KAAK;AAC9BR,EAAAA,KAAK,EAAEQ,KAAK,CAACR,KADiB;AAE9BF,EAAAA,MAAM,EAAEU,KAAK,CAACV;AAFgB,CAAL,CAA7B;;AAIA,MAAMW,kBAAkB,GAAGC,QAAQ,KAAK;AACtCrB,EAAAA,UAAU,EAAEO,EAAE,IAAIc,QAAQ,CAACrB,UAAU,CAACO,EAAD,CAAX,CADY;AAEtCN,EAAAA,YAAY,EAAEQ,MAAM,IAAIY,QAAQ,CAACpB,YAAY,CAACQ,MAAD,CAAb;AAFM,CAAL,CAAnC;;AAIAN,SAAS,CAACmB,SAAV,GAAsB;AACpBX,EAAAA,KAAK,EAAEb,SAAS,CAACyB,KAAV,CAAgBC,UADH;AAEpBf,EAAAA,MAAM,EAAEX,SAAS,CAAC2B,MAAV,CAAiBD,UAFL;AAGpBxB,EAAAA,UAAU,EAAEF,SAAS,CAAC4B,IAAV,CAAeF,UAHP;AAIpBvB,EAAAA,YAAY,EAAEH,SAAS,CAAC4B,IAAV,CAAeF;AAJT,CAAtB;AAOA,eAAe3B,OAAO,CAACqB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CjB,SAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Book from '../components/Book';\nimport { removeBook, changeFilter } from '../actions/index';\nimport Header from '../components/Header';\n\n\n\nclass BooksList extends Component {\n  constructor(props) {\n    super(props)\n    \n  }\n  handleRemoveBook (id){\n    removeBook(id);\n  };\n  handleFilterChange(filter){\n    changeFilter(filter);\n  };\n  getVisibleBooks(books, filter) {\n    books.filter(book => book.category === filter || filter === 'All');\n  }\n\n  visible() {\n    this.getVisibleBooks(this.props.books, this.props.filter);\n  }\n\n  render() {\n    return (\n      <div className=\"container BooksList\">\n        <div className=\"mx-auto col-9 shadow-lg mt-3 \">\n          <div className=\"p-3\">\n            <Header onFilterChange={this.props.handleFilterChange} />\n          </div>\n          {\n            this.propsvisible.map(book => <Book clickDelete={this.props.handleRemoveBook} key={book.id} book={book} />)\n          }\n          <div className=\"clearfix\" />\n        </div>\n\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n    books: state.books,\n    filter: state.filter\n});\nconst mapDispatchToProps = dispatch => ({\n  removeBook: id => dispatch(removeBook(id)),\n  changeFilter: filter => dispatch(changeFilter(filter)),\n});\nBooksList.propTypes = {\n  books: PropTypes.array.isRequired,\n  filter: PropTypes.string.isRequired,\n  removeBook: PropTypes.func.isRequired,\n  changeFilter: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BooksList);\n"]},"metadata":{},"sourceType":"module"}