{"ast":null,"code":"var _jsxFileName = \"/home/addo/Desktop/react_on_rails/src/containers/BooksList.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Book from '../components/Book';\nimport { removeBook, changeFilter } from '../actions/index';\nimport Header from '../components/Header';\n\nclass BooksList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleRemoveBook = id => {\n      removeBook(id);\n    };\n\n    this.handleFilterChange = filter => {\n      changeFilter(filter);\n    };\n\n    this.getVisibleBooks = (books, filter) => books.filter(book => book.category === filter || filter === 'All');\n\n    this.visible = getVisibleBooks(books, filter);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container BooksList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"mx-auto col-9 shadow-lg mt-3 \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"p-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(Header, {\n      onFilterChange: handleFilterChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    })), visible.map(book => React.createElement(Book, {\n      clickDelete: handleRemoveBook,\n      key: book.id,\n      book: book,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"clearfix\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    books: state.books,\n    filter: this.state\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  removeBook: id => dispatch(removeBook(id)),\n  changeFilter: filter => dispatch(changeFilter(filter))\n});\n\nBooksList.propTypes = {\n  books: PropTypes.array.isRequired,\n  filter: PropTypes.string.isRequired,\n  removeBook: PropTypes.func.isRequired,\n  changeFilter: PropTypes.func.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(BooksList);","map":{"version":3,"sources":["/home/addo/Desktop/react_on_rails/src/containers/BooksList.js"],"names":["React","Component","connect","PropTypes","Book","removeBook","changeFilter","Header","BooksList","constructor","props","handleRemoveBook","id","handleFilterChange","filter","getVisibleBooks","books","book","category","visible","render","map","mapStateToProps","state","mapDispatchToProps","dispatch","propTypes","array","isRequired","string","func"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,UAAT,EAAqBC,YAArB,QAAyC,kBAAzC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAIA,MAAMC,SAAN,SAAwBP,SAAxB,CAAkC;AAChCQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAInBC,gBAJmB,GAICC,EAAD,IAAQ;AACzBP,MAAAA,UAAU,CAACO,EAAD,CAAV;AACD,KANkB;;AAAA,SAOnBC,kBAPmB,GAOGC,MAAD,IAAY;AAC/BR,MAAAA,YAAY,CAACQ,MAAD,CAAZ;AACD,KATkB;;AAAA,SAUnBC,eAVmB,GAUD,CAACC,KAAD,EAAQF,MAAR,KAAmBE,KAAK,CAACF,MAAN,CAAaG,IAAI,IAAIA,IAAI,CAACC,QAAL,KAAkBJ,MAAlB,IAA4BA,MAAM,KAAK,KAA5D,CAVlB;;AAAA,SAYnBK,OAZmB,GAYTJ,eAAe,CAACC,KAAD,EAAQF,MAAR,CAZN;AAElB;;AAYDM,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,cAAc,EAAEP,kBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAKIM,OAAO,CAACE,GAAR,CAAYJ,IAAI,IAAI,oBAAC,IAAD;AAAM,MAAA,WAAW,EAAEN,gBAAnB;AAAqC,MAAA,GAAG,EAAEM,IAAI,CAACL,EAA/C;AAAmD,MAAA,IAAI,EAAEK,IAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAApB,CALJ,EAOE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,CADF,CADF;AAcD;;AA9B+B;;AAiClC,MAAMK,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLP,IAAAA,KAAK,EAAEO,KAAK,CAACP,KADR;AAELF,IAAAA,MAAM,EAAE,KAAKS;AAFR,GAAP;AAID,CALD;;AAMA,MAAMC,kBAAkB,GAAGC,QAAQ,KAAK;AACtCpB,EAAAA,UAAU,EAAEO,EAAE,IAAIa,QAAQ,CAACpB,UAAU,CAACO,EAAD,CAAX,CADY;AAEtCN,EAAAA,YAAY,EAAEQ,MAAM,IAAIW,QAAQ,CAACnB,YAAY,CAACQ,MAAD,CAAb;AAFM,CAAL,CAAnC;;AAIAN,SAAS,CAACkB,SAAV,GAAsB;AACpBV,EAAAA,KAAK,EAAEb,SAAS,CAACwB,KAAV,CAAgBC,UADH;AAEpBd,EAAAA,MAAM,EAAEX,SAAS,CAAC0B,MAAV,CAAiBD,UAFL;AAGpBvB,EAAAA,UAAU,EAAEF,SAAS,CAAC2B,IAAV,CAAeF,UAHP;AAIpBtB,EAAAA,YAAY,EAAEH,SAAS,CAAC2B,IAAV,CAAeF;AAJT,CAAtB;AAOA,eAAe1B,OAAO,CAACoB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6ChB,SAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Book from '../components/Book';\nimport { removeBook, changeFilter } from '../actions/index';\nimport Header from '../components/Header';\n\n\n\nclass BooksList extends Component {\n  constructor(props) {\n    super(props)\n  }\n  \n  handleRemoveBook = (id) => {\n    removeBook(id);\n  };\n  handleFilterChange = (filter) => {\n    changeFilter(filter);\n  };\n  getVisibleBooks = (books, filter) => books.filter(book => book.category === filter || filter === 'All');\n\n  visible = getVisibleBooks(books, filter);\n\n  render() {\n    return (\n      <div className=\"container BooksList\">\n        <div className=\"mx-auto col-9 shadow-lg mt-3 \">\n          <div className=\"p-3\">\n            <Header onFilterChange={handleFilterChange} />\n          </div>\n          {\n            visible.map(book => <Book clickDelete={handleRemoveBook} key={book.id} book={book} />)\n          }\n          <div className=\"clearfix\" />\n        </div>\n\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    books: state.books,\n    filter: this.state\n  }\n};\nconst mapDispatchToProps = dispatch => ({\n  removeBook: id => dispatch(removeBook(id)),\n  changeFilter: filter => dispatch(changeFilter(filter)),\n});\nBooksList.propTypes = {\n  books: PropTypes.array.isRequired,\n  filter: PropTypes.string.isRequired,\n  removeBook: PropTypes.func.isRequired,\n  changeFilter: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BooksList);\n"]},"metadata":{},"sourceType":"module"}