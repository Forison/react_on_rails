{"ast":null,"code":"import _objectSpread from \"/home/addo/Desktop/react_on_rails/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nconst CREATE_BOOK = 'CREATE_BOOK';\nconst REMOVE_BOOK = 'REMOVE_BOOK';\nconst CHANGE_FILTER = 'CHANGE_FILTER';\nconst GET_BOOKS = 'GET_BOOKS';\n\nconst getBooks = async () => {\n  const response = await axios.get('https://bookstore-apis.herokuapp.com//api/v1/books');\n\n  if (response.data.status === 'SUCCESS') {\n    dispatch({\n      type: GET_BOOKS,\n      books: response.data.books\n    });\n  }\n};\n\nconst createBook = book => _objectSpread({\n  type: CREATE_BOOK\n}, book);\n\nconst removeBook = id => ({\n  type: REMOVE_BOOK,\n  id\n});\n\nconst changeFilter = filter => ({\n  type: CHANGE_FILTER,\n  filter\n});\n\nexport { createBook, removeBook, changeFilter, getBooks };","map":{"version":3,"sources":["/home/addo/Desktop/react_on_rails/src/actions/index.js"],"names":["CREATE_BOOK","REMOVE_BOOK","CHANGE_FILTER","GET_BOOKS","getBooks","response","axios","get","data","status","dispatch","type","books","createBook","book","removeBook","id","changeFilter","filter"],"mappings":";AAAA,MAAMA,WAAW,GAAG,aAApB;AACA,MAAMC,WAAW,GAAG,aAApB;AACA,MAAMC,aAAa,GAAG,eAAtB;AACA,MAAMC,SAAS,GAAG,WAAlB;;AAGA,MAAMC,QAAQ,GAAG,YAAW;AAC1B,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACC,GAAN,CAAU,oDAAV,CAAvB;;AACA,MAAGF,QAAQ,CAACG,IAAT,CAAcC,MAAd,KAAyB,SAA5B,EAAuC;AACrCC,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAER,SAAR;AAAmBS,MAAAA,KAAK,EAAEP,QAAQ,CAACG,IAAT,CAAcI;AAAxC,KAAD,CAAR;AACD;AACF,CALD;;AAMA,MAAMC,UAAU,GAAGC,IAAI;AACrBH,EAAAA,IAAI,EAAEX;AADe,GAElBc,IAFkB,CAAvB;;AAKA,MAAMC,UAAU,GAAGC,EAAE,KAAK;AACxBL,EAAAA,IAAI,EAAEV,WADkB;AAExBe,EAAAA;AAFwB,CAAL,CAArB;;AAKA,MAAMC,YAAY,GAAGC,MAAM,KAAK;AAC9BP,EAAAA,IAAI,EAAET,aADwB;AAE9BgB,EAAAA;AAF8B,CAAL,CAA3B;;AAKA,SAASL,UAAT,EAAqBE,UAArB,EAAiCE,YAAjC,EAA8Cb,QAA9C","sourcesContent":["const CREATE_BOOK = 'CREATE_BOOK';\nconst REMOVE_BOOK = 'REMOVE_BOOK';\nconst CHANGE_FILTER = 'CHANGE_FILTER';\nconst GET_BOOKS = 'GET_BOOKS';\n\n\nconst getBooks = async() => {\n  const response = await axios.get('https://bookstore-apis.herokuapp.com//api/v1/books');\n  if(response.data.status === 'SUCCESS') {\n    dispatch({ type: GET_BOOKS, books: response.data.books })\n  }\n};\nconst createBook = book => ({\n  type: CREATE_BOOK,\n  ...book,\n});\n\nconst removeBook = id => ({\n  type: REMOVE_BOOK,\n  id,\n});\n\nconst changeFilter = filter => ({\n  type: CHANGE_FILTER,\n  filter,\n});\n\nexport { createBook, removeBook, changeFilter,getBooks };\n"]},"metadata":{},"sourceType":"module"}